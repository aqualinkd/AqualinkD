
#ifndef AQ_IAQUALINK_H_
#define AQ_IAQUALINK_H_

//void send_iaqualink_ack(int rs_fd, unsigned char *packet_buffer);

int get_iaqualink_cmd(unsigned char source_message_type, unsigned char **dest_message);
void remove_iaqualink_cmd();

bool process_iaqualink_packet(unsigned char *packet, int length, struct aqualinkdata *aq_data);
bool process_iAqualinkStatusPacket(unsigned char *packet, int length, struct aqualinkdata *aq_data);

void set_iaqualink_aux_state(aqkey *button, bool isON);
void set_iaqualink_heater_setpoint(int value, SP_TYPE type);

// Send the below commands to turn on/off (toggle)
// This is the button in pButton. (byte 6 in below)
// iAq pButton | HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x21|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xcb|0x10|0x03|

#define IAQ_PUMP     0x00
#define IAQ_POOL_HTR 0x01
#define IAQ_SPA      0x02
#define IAQ_SPA_HTR  0x03
//....... some missing ....
//#define IAQ_ALL_OFF    0x10 
//#define IAQ_SPA_MODE   0x11
//#define IAQ_CLEAN_MODE 0x12
#define IAQ_ONETOUCH_1 0x10 
#define IAQ_ONETOUCH_2 0x11 
#define IAQ_ONETOUCH_3 0x12 
#define IAQ_ONETOUCH_4 0x13  // Im gessing
#define IAQ_ONETOUCH_5 0x14  // Im gessing
#define IAQ_ONETOUCH_6 0x15  // Im gessing

#define IAQ_ALL_OFF    IAQ_ONETOUCH_1     // Using default name
#define IAQ_SPA_MODE   IAQ_ONETOUCH_2    // Using default name
#define IAQ_CLEAN_MODE IAQ_ONETOUCH_3  // Using default name

#define IAD_SWG      0x19
//....... some missing ....
#define IAQ_AUX1     0x21  //0x25  RS16 & 12 // AUX5
#define IAQ_AUX2     0x22  //0x26  RS16
#define IAQ_AUX3     0x23  //0x27  RS16
#define IAQ_AUX4     0x24  //0x28  RS16
#define IAQ_AUX5     0x25  //0x29  RS16
#define IAQ_AUX6     0x26  //0x2a  RS16
#define IAQ_AUX7     0x27  //0x2b  RS16
#define IAQ_AUXB1    0x28  //0x2c  RS16
#define IAQ_AUXB2    0x29  //0x2d  RS16
#define IAQ_AUXB3    0x2a  //0x2e  RS16
#define IAQ_AUXB4    0x2b  //0x2f  RS16
#define IAQ_AUXB5    0x2c  //0x30  RS16
#define IAQ_AUXB6    0x2d  //0x31  RS16
#define IAQ_AUXB7    0x2e  //0x32  RS16
#define IAQ_AUXB8    0x2f  //0x33  RS16
/*
#define IAQ_AUX1     0x25  //0x25  RS16 & 12 // AUX5
#define IAQ_AUX2     0x26  //0x26  RS16
#define IAQ_AUX3     0x27  //0x27  RS16
#define IAQ_AUX4     0x28  //0x28  RS16
#define IAQ_AUX5     0x29  //0x29  RS16
#define IAQ_AUX6     0x2a  //0x2a  RS16
#define IAQ_AUX7     0x2b  //0x2b  RS16
#define IAQ_AUXB1    0x2c  //0x2c  RS16
#define IAQ_AUXB2    0x2d  //0x2d  RS16
#define IAQ_AUXB3    0x2e  //0x2e  RS16
#define IAQ_AUXB4    0x2f  //0x2f  RS16
#define IAQ_AUXB5    0x30  //0x30  RS16
#define IAQ_AUXB6    0x31  //0x31  RS16
#define IAQ_AUXB7    0x32  //0x32  RS16
#define IAQ_AUXB8    0x33  //0x33  RS16
*/
//... Looks like there are C & D buttons
/* I got this when sending  dec=53 hex=0x35 as the button, all of a sudden got extra buttons in the aux status message send to AqualinkTouch protocol
   Not sure on ordering BUT  dec=57 hex=0x39 = button D2 / dec=58 hex=0x3a = D3
Notice:  iAQ Touch: Label Aux C1 = On
Notice:  iAQ Touch: Label Aux C2 = Off
Notice:  iAQ Touch: Label Aux C3 = Off
Notice:  iAQ Touch: Label Aux C4 = Off
Notice:  iAQ Touch: Label Aux C5 = Off
Notice:  iAQ Touch: Label Aux C6 = On
Notice:  iAQ Touch: Label Aux C7 = On
Notice:  iAQ Touch: Label Aux C8 = On
Notice:  iAQ Touch: Label Aux D1 = On
Notice:  iAQ Touch: Label Aux D2 = On
Notice:  iAQ Touch: Label Aux D3 = On
Notice:  iAQ Touch: Label Aux D4 = On
Notice:  iAQ Touch: Label Aux D5 = On
Notice:  iAQ Touch: Label Aux D6 = On
Notice:  iAQ Touch: Label Aux D7 = On
Notice:  iAQ Touch: Label Aux D8 = On
*/
#define IAQ_AUXD2    0x39
#define IAQ_AUXD3    0x3a // 58 in dec
#define IAQ_AUXD4    // 59 in dec
#define IAQ_AUXD5    // 60 in dec
#define IAQ_AUXD6    // 61 in dec
#define IAQ_AUXD7    // 62 in dec
#define IAQ_AUXD8    // 63 in dec (but this is VAUX1)
//... Need to add Vitrual buttons...
#define IAQ_VAUX1    0x3f

#define IAQ_PUMP_RPM 0x5e


#endif


/*

Read  Jandy   packet To 0xa3 of type   Unknown '0x53' | HEX: 0x10|0x02|0xa3|0x53|0x08|0x10|0x03|
Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x3f|0x00|0x52|0x10|0x03|


Below get's sent to AqualinkTouch with iAqualink is enabled.
End of message is board cpu and panel type.
Read  Jandy   packet To 0x33 of type   Unknown '0x70' | HEX: 0x10|0x02|0x33|0x70|0x0d|0x00|0x01|0x02|0x03|0x05|0x06|0x07|0x0e|0x0f|0x1a|0x1d|0x20|0x21|0x00|0x00|0x00|0x00|0x00|0x48|0x00|0x66|0x00|0x50|0x00|0x00|0x00|0xff|0x42|0x30|0x33|0x31|0x36|0x38|0x32|0x33|0x20|0x52|0x53|0x2d|0x34|0x20|0x43|0x6f|0x6d|0x62|0x6f|0x00|0x00|0x4b|0x10|0x03|

*/

/*
----
Retrieve poll 0x53
Reply ack w/ command  0x01|0x3f|0x20. (0x20 command)
Retrieve 0x73 command Same ID iAqualink
Reply iAQ pButton ( turn something on / set something)

Retrieve poll 0x53
Reply ack w/ command  0x01|0x3f|0x08. (0x08 command)
Retrieve 0x70 command on AqualinkTouch ID
Reply iAQ pButton (status / last part of frame is board cpu)
-- Byte 4 = offset.
-- Byte 21 look like spa heat 0x00=off, 0x03=enabled
-- offest+ 8 spa setpoint
-- offset+ 10 air temp
-- offest+ 13 pool temp
-- offset+ 14 SWG% ?????
-- Byte 27 looks like air temp
-- Byte 28 air temp????
-- Byte 30 pool temp
-- Byte 34 looks like SWG%
-- after byte 0xff is board

Retrieve poll 0x53
Reply ack w/ command  0x01|0x3f|0x10. (0x10 command)
Retrieve 0x71 command on AqualinkTouch ID
Reply iAQ pButton (not sure)
    Byte 4 & 5 seems to indicate a different sub type
    0x71|0x01|0x19 = status about pool / spa / speed 1,2,3,4 / pool & spa heat
    0x71|0x01|0x1a = no idea
    0x71|0x01|0x17 = Pump numbers (doesn't seem to have any status, just pump names)

    0x71|0x06|0x01 = Touch like spa mode / all off
    0x71|0x07|0x01 = Same as above. but more trailing packets.

Retrieve poll 0x53
Reply ack w/ command   0x3f 0x18.  (0x18 is command)
Retrieve 0x72 command on AqualinkTouch ID
Get a massive packet Aux status

----

Retrieve poll 0x53
Reply ack w/ command  0x01|0x3f|0x20. (0x20 command)
Retrieve 0x72 command
Reply iAQ pButton (turn something on / set something).  Below are examples.

RPM to 2750
Bit 10 * 256 + Bit 11
Bit 6 & 7 probably pump index.
 HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x5e|0x04|0x00|0x01|0x0a|0xbe|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xd5|0x10|0x03|

RPM to 2995
 HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x5e|0x04|0x00|0x01|0x0b|0xb3|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xcb|0x10|0x03|

SWG 50%
Byte 7 = 50%
 HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x19|0x32|0x00|0x18|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x0e|0x10|0x03|

SWG 51%
Byte 7 = 51%
 HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x19|0x33|0x00|0x18|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x0f|0x10|0x03|

---------

Send command 0x18 to 0xa1 returns below to 0x31.  Looks like status of aux devices.
Retrieve poll 0x53
Reply ack w/ command   0x3f 0x18.  (0x18 is command)
Get a massive packet back, of aux status

Filter pump does not effect the below.
Heater on/off does not effect below.
HEater setpoints does not effect.
Only Aux on/off seem to effect the status.

4th bit tells you where to start,
  after start 4 bits are status
  last bit of status tell you chars in label.
  after label repeat start 4 bits.

For Aux1 10th bit 0=off 1=on 11 to 14  15 to 19=name
    Aux2 19th
    Aux3 28
    Aux4 37

In Below Aux 3 color light / Aux 4 dimmer / Aux 5 color light (different type to aux3)

Aux 1 off / Aux 3 on
  HEX: 0x10|0x02|0x31|0x72|0x05|0x01|0x02|0x03|0x04|0x05|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x31|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x32|0x01|0x07|0x02|0x03|0x04|0x41|0x75|0x78|0x33|0x00|0x01|0x01|0x00|0x04|0x41|0x75|0x78|0x34|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x35|0xd5|0x10|0x03|
Dec   |  16|   2|  49| 114|   5|   1|   2|   3|   4|   5|   0|   1|   0|   0|   4|  65| 117| 120|  49|   1|   1|   0|   0|   4|  65| 117| 120|  50|   1|   7|   2|   3|   4|  65| 117| 120|  51|   0|   1|   1|   0|   4|  65| 117| 120|  52|   0|   1|   0|   0|   4|  65| 117| 120|  53| 213|  16|   3
Ascii |    |    |   1|   r|    |    |    |    |    |    |    |    |    |    |    |   A|   u|   x|   1|    |    |    |    |    |   A|   u|   x|   2|    |    |    |    |    |   A|   u|   x|   3|    |    |    |    |    |   A|   u|   x|   4|    |    |    |    |    |   A|   u|   x|   5|    |    |

Aux 1 on / Aux 3 on
| HEX: 0x10|0x02|0x31|0x72|0x05|0x01|0x02|0x03|0x04|0x05|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x31|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x32|0x01|0x07|0x02|0x03|0x04|0x41|0x75|0x78|0x33|0x00|0x01|0x01|0x00|0x04|0x41|0x75|0x78|0x34|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x35|0xd6|0x10|0x03|
Dec   |  16|   2|  49| 114|   5|   1|   2|   3|   4|   5|   1|   1|   0|   0|   4|  65| 117| 120|  49|   1|   1|   0|   0|   4|  65| 117| 120|  50|   1|   7|   2|   3|   4|  65| 117| 120|  51|   0|   1|   1|   0|   4|  65| 117| 120|  52|   0|   1|   0|   0|   4|  65| 117| 120|  53| 214|  16|   3
Ascii |    |    |   1|   r|    |    |    |    |    |    |    |    |    |    |    |   A|   u|   x|   1|    |    |    |    |    |   A|   u|   x|   2|    |    |    |    |    |   A|   u|   x|   3|    |    |    |    |    |   A|   u|   x|   4|    |    |    |    |    |   A|   u|   x|   5|    |    |

Aux 1 off Aux3 to different light color
Hex   |0x10|0x02|0x31|0x72|0x05|0x01|0x02|0x03|0x04|0x05|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x31|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x32|0x00|0x07|0x02|0x03|0x04|0x41|0x75|0x78|0x33|0x00|0x01|0x01|0x00|0x04|0x41|0x75|0x78|0x34|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x35|0xd4|0x10|0x03|
Dec   |  16|   2|  49| 114|   5|   1|   2|   3|   4|   5|   0|   1|   0|   0|   4|  65| 117| 120|  49|   1|   1|   0|   0|   4|  65| 117| 120|  50|   0|   7|   2|   3|   4|  65| 117| 120|  51|   0|   1|   1|   0|   4|  65| 117| 120|  52|   0|   1|   0|   0|   4|  65| 117| 120|  53| 212|  16|   3
Ascii |    |    |   1|   r|    |    |    |    |    |    |    |    |    |    |    |   A|   u|   x|   1|    |    |    |    |    |   A|   u|   x|   2|    |    |    |    |    |   A|   u|   x|   3|    |    |    |    |    |   A|   u|   x|   4|    |    |    |    |    |   A|   u|   x|   5|    |    |



RS16 panel.
  HEX: 0x10|0x02|0x31|0x72|0x0f|0x01|0x02|0x03|0x04|0x05|0x06|0x07|0x08|0x09|0x0a|0x0b|0x0c|0x0d|0x0e|0x0f|0x00|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x31|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x32|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x33|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x34|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x35|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x36|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x37|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x31|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x32|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x33|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x34|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x35|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x36|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x37|0x01|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x38|0x77|0x10|0x03|
Dec   |  16|   2|  49| 114|  15|   1|   2|   3|   4|   5|   6|   7|   8|   9|  10|  11|  12|  13|  14|  15|   0|   1|   0|   0|   4|  65| 117| 120|  49|   1|   1|   0|   0|   4|  65| 117| 120|  50|   1|   1|   0|   0|   4|  65| 117| 120|  51|   1|   1|   0|   0|   4|  65| 117| 120|  52|   1|   1|   0|   0|   4|  65| 117| 120|  53|   1|   1|   0|   0|   4|  65| 117| 120|  54|   1|   1|   0|   0|   4|  65| 117| 120|  55|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  49|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  50|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  51|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  52|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  53|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  54|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  55|   1|   1|   0|   0|   6|  65| 117| 120|  32|  66|  56| 119|  16|   3
Ascii |    |    |   1|   r|    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |   A|   u|   x|   1|    |    |    |    |    |   A|   u|   x|   2|    |    |    |    |    |   A|   u|   x|   3|    |    |    |    |    |   A|   u|   x|   4|    |    |    |    |    |   A|   u|   x|   5|    |    |    |    |    |   A|   u|   x|   6|    |    |    |    |    |   A|   u|   x|   7|    |    |    |    |    |   A|   u|   x|    |   B|   1|    |    |    |    |    |   A|   u|   x|    |   B|   2|    |    |    |    |    |   A|   u|   x|    |   B|   3|    |    |    |    |    |   A|   u|   x|    |   B|   4|    |    |    |    |    |   A|   u|   x|    |   B|   5|    |    |    |    |    |   A|   u|   x|    |   B|   6|    |    |    |    |    |   A|   u|   x|    |   B|   7|    |    |    |    |    |   A|   u|   x|    |   B|   8|   w|    |

Hex   |0x10|0x02|0x31|0x72|

*/

/* Startup sequences

RS16 combo
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type            Probe | HEX: 0x10|0x02|0xa1|0x00|0xb3|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x61' | HEX: 0x10|0x02|0xa1|0x61|0x00|0x00|0x00|0x01|0x00|0x1d|0x32|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x61|0x00|0x74|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x50' | HEX: 0x10|0x02|0xa1|0x50|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x00|0x23|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x50|0x00|0x63|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x51' | HEX: 0x10|0x02|0xa1|0x51|0x31|0x42|0x41|0x36|0x32|0x38|0x32|0x35|0x42|0x37|0x43|0x36|0x39|0x41|0x34|0x43|0x00|0xa2|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x51|0x00|0x64|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x59' | HEX: 0x10|0x02|0xa1|0x59|0x00|0x0c|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x59|0x00|0x6c|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x52' | HEX: 0x10|0x02|0xa1|0x52|0x00|0x05|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x52|0x00|0x65|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type     iAqalnk Poll | HEX: 0x10|0x02|0xa1|0x53|0x06|0x10|0x03|

RS8 Combo rev T.2
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type            Probe | HEX: 0x10|0x02|0xa1|0x00|0xb3|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x61' | HEX: 0x10|0x02|0xa1|0x61|0x00|0x00|0x00|0x01|0x00|0x1d|0x32|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x61|0x00|0x74|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x50' | HEX: 0x10|0x02|0xa1|0x50|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x00|0x23|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x50|0x00|0x63|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x51' | HEX: 0x10|0x02|0xa1|0x51|0x31|0x42|0x41|0x36|0x32|0x38|0x32|0x35|0x42|0x37|0x43|0x36|0x39|0x41|0x34|0x43|0x00|0xa2|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x51|0x00|0x64|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x59' | HEX: 0x10|0x02|0xa1|0x59|0x00|0x0c|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x59|0x00|0x6c|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x52' | HEX: 0x10|0x02|0xa1|0x52|0x00|0x05|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x52|0x00|0x65|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type     iAqalnk Poll | HEX: 0x10|0x02|0xa1|0x53|0x06|0x10|0x03|

RS4 rev Yg
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type            Probe | HEX: 0x10|0x02|0xa3|0x00|0xb5|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x61' | HEX: 0x10|0x02|0xa3|0x61|0x00|0x00|0x00|0x04|0x00|0x27|0x41|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x61|0x00|0x74|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x50' | HEX: 0x10|0x02|0xa3|0x50|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x00|0x25|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x50|0x00|0x63|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x51' | HEX: 0x10|0x02|0xa3|0x51|0x00|0x06|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x51|0x00|0x64|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x59' | HEX: 0x10|0x02|0xa3|0x59|0x00|0x0e|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x59|0x00|0x6c|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x52' | HEX: 0x10|0x02|0xa3|0x52|0x00|0x07|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x52|0x00|0x65|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0xa3 of type   Unknown '0x53' | HEX: 0x10|0x02|0xa3|0x53|0x08|0x10|0x03|
Notice: Serial Log:Read  Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x3f|0x00|0x52|0x10|0x03|

RS6 rev T2 RS8 (home)
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type            Probe | HEX: 0x10|0x02|0xa1|0x00|0xb3|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x61' | HEX: 0x10|0x02|0xa1|0x61|0x00|0x00|0x00|0x01|0x00|0x1d|0x32|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x61|0x00|0x74|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x50' | HEX: 0x10|0x02|0xa1|0x50|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x20|0x00|0x23|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x50|0x00|0x63|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x51' | HEX: 0x10|0x02|0xa1|0x51|0x31|0x42|0x41|0x36|0x32|0x38|0x32|0x35|0x42|0x37|0x43|0x36|0x39|0x41|0x34|0x43|0x00|0xa2|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x51|0x00|0x64|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x59' | HEX: 0x10|0x02|0xa1|0x59|0x01|0x0d|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x59|0x00|0x6c|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type   Unknown '0x52' | HEX: 0x10|0x02|0xa1|0x52|0x03|0x08|0x10|0x03|
Debug:   RS Serial: Write Jandy   packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x52|0x00|0x65|0x10|0x03|
Debug:   RS Serial: Read  Jandy   packet To 0xa1 of type     iAqalnk Poll | HEX: 0x10|0x02|0xa1|0x53|0x06|0x10|0x03|
*/


/*


0x10|0x02|0x31|0x72|0x0f|0x01|0x02|0x03|0x04|0x05|0x06|0x07|0x08|0x09|0x0a|0x0b|0x0c|0x0d|0x0e|0x0f|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x31|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x32|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x33|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x34|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x35|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x36|0x01|0x01|0x00|0x00|0x04|0x41|0x75|0x78|0x37|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x31|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x32|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x33|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x34|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x35|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x36|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x37|0x00|0x01|0x00|0x00|0x06|0x41|0x75|0x78|0x20|0x42|0x38|0x70|0x10|0x03|


Only panel (RS8)
Air   index 3 type 15 (pump off)
Air   index 3 type 14 (pump off)
Air   index 3 type  8 (pump on)
Water index 5 type 15 (pump on)
Temp2 ndex  8 type 20 
always 1 | index=4 type=(15 0x0f)

Comb0
Spa setpoint index 8 type 14
Air          index 8 type 26
*/



/*

Pump RPM

All taken from panel Yg, but only heater setpoints seem to work.
Only setpoints seem to work, 

RPM to 2750
Bit 6 = 0x5e 
Bit 10 * 256 + Bit 11
Bit 7 or 9 probably pump index.
HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x5e|0x04|0x00|0x01|0x0a|0xbe|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xd5|0x10|0x03|

RPM to 2995
HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x5e|0x04|0x00|0x01|0x0b|0xb3|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xcb|0x10|0x03|


Below is setting RPM to 2505

packet To 0xa3 of type     iAqalnk Poll | HEX: 0x10|0x02|0xa3|0x53|0x08|0x10|0x03|
packet To 0x00 of type   Ack w/ Command | HEX: 0x10|0x02|0x00|0x01|0x3f|0x20|0x72|0x10|0x03|
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0xa3 of type   Unknown '0x73' | HEX: 0x10|0x02|0xa3|0x73|0x28|0x10|0x03|
packet To 0x00 of type iAqualnk sendCmd | HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x5e|0x04|0x00|0x01|0x09|0xc9|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xdf|0x10|0x03|
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
packet To 0x33 of type  iAq 1Tch status | HEX: 0x10|0x02|0x33|0x71|0x07|0x01|0x02|0x03|0x04|0x05|0x0f|0x12|0x00|0x07|0x41|0x6c|0x6c|0x20|0x4f|0x46|0x46|0x00|0x08|0x53|0x70|0x61|0x20|0x4d|0x6f|0x64|0x65|0x00|0x0a|0x43|0x6c|0x65|0x61|0x6e|0x20|0x4d|0x6f|0x64|0x65|0x00|0x08|0x42|0x75|0x62|0x62|0x6c|0x65|0x72|0x73|0x00|0x0a|0x57|0x61|0x74|0x65|0x72|0x66|0x61|0x6c|0x6c|0x31|0x04|0x09|0xc9|0x0d|0x7a|0x06|0xa4|0x0a|0xbe|0x08|0xca|0x08|0xca|0x0a|0xbe|0x0a|0xbe|0x05|0xdc|0x04|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x6a|0x10|0x03|
All OFF         = Off | index 0 type=(01 0x01) status=0x00 start=12 length=7
Spa Mode        = Off | index 1 type=(02 0x02) status=0x00 start=21 length=8
Clean Mode      = Off | index 2 type=(03 0x03) status=0x00 start=31 length=10
Bubblers        = Off | index 3 type=(04 0x04) status=0x00 start=43 length=8
Waterfall1      = Off | index 4 type=(05 0x05) status=0x00 start=53 length=10
*** RPM is in the next bytes from iAq 1Tch status.  But can't tell how to pull them since SWG is also here as well. ****

*/

/* 
SWG

SWG 50%
Byte 6 = 0x19
Byte 7 = 50%
Byte 9 & 10 ????
HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x19|0x32|0x00|0x18|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x0e|0x10|0x03|

SWG 51%
Byte 7 = 51%
HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x19|0x33|0x00|0x18|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x0f|0x10|0x03|


Below is set SWG to 35

packet To 0xa3 of type     iAqalnk Poll | HEX: 0x10|0x02|0xa3|0x53|0x08|0x10|0x03|
packet To 0x00 of type   Ack w/ Command | HEX: 0x10|0x02|0x00|0x01|0x3f|0x20|0x72|0x10|0x03|
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
packet To 0xa3 of type   Unknown '0x73' | HEX: 0x10|0x02|0xa3|0x73|0x28|0x10|0x03|
packet To 0x00 of type iAqualnk sendCmd | HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x19|0x23|0x00|0x18|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xff|0x10|0x03|
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
packet To 0x33 of type  iAq 1Tch status | HEX: 0x10|0x02|0x33|0x71|0x07|0x01|0x02|0x03|0x04|0x05|0x12|0x20|0x00|0x07|0x41|0x6c|0x6c|0x20|0x4f|0x46|0x46|0x00|0x08|0x53|0x70|0x61|0x20|0x4d|0x6f|0x64|0x65|0x00|0x0a|0x43|0x6c|0x65|0x61|0x6e|0x20|0x4d|0x6f|0x64|0x65|0x00|0x08|0x42|0x75|0x62|0x62|0x6c|0x65|0x72|0x73|0x00|0x0a|0x57|0x61|0x74|0x65|0x72|0x66|0x61|0x6c|0x6c|0x31|0x04|0x01|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x23|0x00|0x00|0x18|0x00|0x00|0x01|0x00|0xd3|0x10|0x03|
All OFF         = Off | index 0 type=(01 0x01) status=0x00 start=12 length=7
Spa Mode        = Off | index 1 type=(02 0x02) status=0x00 start=21 length=8
Clean Mode      = Off | index 2 type=(03 0x03) status=0x00 start=31 length=10
Bubblers        = Off | index 3 type=(04 0x04) status=0x00 start=43 length=8
Waterfall1      = Off | index 4 type=(05 0x05) status=0x00 start=53 length=10
*** SWG is in the next bytes from iAq 1Tch status.  But can't tell how to pull them since RPM is also here as well. ****

*/



/*

This works on rev Yg, but doesn't seem to T.2

Set Heat Pump Chiller Setpoint.
  Set to 94  (0x5e in type iAqualnk sendCmd)

Byte 12 in iAqualink sendCmd (sets set point)
Byte 6 from end iAq Main status (looks like return)

  Set to 94 (0x5e in type iAqualink sentCmd)
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
packet To 0xa3 of type   Unknown '0x73' | HEX: 0x10|0x02|0xa3|0x73|0x28|0x10|0x03|
packet To 0x00 of type iAqualnk sendCmd | HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x1f|0x00|0x4b|0x00|0x63|0x00|0x5e|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xd5|0x10|0x03|
packet To 0x33 of type  iAq Main status | HEX: 0x10|0x02|0x33|0x70|0x11|0x00|0x01|0x02|0x03|0x05|0x06|0x07|0x08|0x0e|0x0f|0x1a|0x1d|0x1f|0x20|0x21|0x24|0x25|0x01|0x00|0x00|0x00|0x00|0x4b|0x00|0x63|0x00|0x59|0x00|0x4f|0x00|0x00|0x00|0x37|0x18|0x42|0x30|0x33|0x31|0x36|0x38|0x32|0x33|0x20|0x52|0x53|0x2d|0x34|0x20|0x43|0x6f|0x6d|0x62|0x6f|0x00|0x00|0x00|0x5e|0x00|0x37|0xfd|0x10|0x03|


  Set to 92 (0x5c in type iAqualink sentCmd)
packet To 0x33 of type         iAq Poll | HEX: 0x10|0x02|0x33|0x30|0x75|0x10|0x03|
packet To 0x00 of type              Ack | HEX: 0x10|0x02|0x00|0x01|0x00|0x00|0x13|0x10|0x03|
packet To 0xa3 of type   Unknown '0x73' | HEX: 0x10|0x02|0xa3|0x73|0x28|0x10|0x03|
packet To 0x00 of type iAqualnk sendCmd | HEX: 0x10|0x02|0x00|0x24|0x73|0x01|0x1f|0x00|0x4b|0x00|0x63|0x00|0x5c|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0x00|0xd3|0x10|0x03| 
packet To 0x33 of type  iAq Main status | HEX: 0x10|0x02|0x33|0x70|0x11|0x00|0x01|0x02|0x03|0x05|0x06|0x07|0x08|0x0e|0x0f|0x1a|0x1d|0x1f|0x20|0x21|0x24|0x25|0x01|0x00|0x00|0x00|0x00|0x4b|0x00|0x63|0x00|0x59|0x00|0x4f|0x00|0x00|0x00|0x37|0x18|0x42|0x30|0x33|0x31|0x36|0x38|0x32|0x33|0x20|0x52|0x53|0x2d|0x34|0x20|0x43|0x6f|0x6d|0x62|0x6f|0x00|0x00|0x00|0x5c|0x00|0x37|0xfb|0x10|0x03|



*/